{
 :jig/components
 {
  ;; Console - demonstrating the support for Pedestal services

  ;; This is a built in component to start a web server on a specific
  ;; port.  Only jetty is supported currently but the design provides
  ;; for various implementations.
  :console/server
  {:jig/component jig.web.server/Component
   :io.pedestal.service.http/port 8001
   :io.pedestal.service.http/type :jetty
   :io.pedestal.service.http/resource-path "/assets"
   }

  ;; Pedestal routes are bound to a hostname, allowing for virtual
  ;; hosts.  For each such virtual host, we can add a component that
  ;; specifies the scheme and hostname.  This component is provided by
  ;; Jig and provides an anchor on which to hook multiple applications
  ;; (or application components), each providing multiple services. The
  ;; component references the :examples/server as the server it will
  ;; bind to - it must also reference the :examples/server as a
  ;; dependency so that the server is initialised first. However, in
  ;; future, this 'configuration duplication' will be unnecessary.
  :console/web
  {:jig/component jig.web.app/Component
   :jig/dependencies [:console/server]
   :jig/scheme :http
   :jig/hostname "localhost"
   :jig.web/server :console/server}

 :stencil-cache
 {:jig/component jig.web.stencil/StencilCache}

  ;; An application component, which adds routes to a virtual host,
  ;; bound on a web server. The virtual host component is specified in
  ;; :jig.web/app-name and also in :jig/dependencies. As above, this
  ;; 'configuration duplication' will be unnecessary in a future version
  ;; of Jig. This 'custom' component is defined in an application
  ;; project, which must be specified in :jig/project. Jig handles the
  ;; classloading of the application project, as defined by its
  ;; project.clj file.
  :console/readme
  {:jig/component jig.console.core/ReadmeComponent
   :jig/dependencies [:console/web :stencil-cache]
   :jig.web/app-name :console/web
   :jig/project "examples/console/project.clj"
   }
  }

 :jig/projects
 [
  {
   :jig/project "examples/console/project.clj"
   :jig/classloader-pinned? false
   ;; eg. extra classpath, source dirs, etc. here - (until someones has
   ;; actually added this feature, consider this an 'idea comment')
   }]

 }
